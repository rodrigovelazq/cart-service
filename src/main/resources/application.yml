spring:
  application:
    name: cart-service
  profiles:
    default: default
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

  datasource:
    url: jdbc:postgresql://localhost:5432/productsdb
    username: admin
    password: admin123
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

server:
  port: 8082
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

#  1- Se hace una llamada al servicio.
#  2- Si falla por TimeoutException, entra en Retry.
#  3- Si los 3 intentos de Retry fallan, cuenta como una falla para el Circuit Breaker.
#  4- Si más del 50% de las últimas 10 llamadas fallan, el Circuit Breaker pasa a Open.
#  5- El Circuit Breaker espera 10 segundos sin permitir tráfico.
#  6- Después de 10s, permite 2 llamadas de prueba en Half-Open.
#  7- Dependiendo de esas llamadas:
#     - Si funcionan, se cierra.
#     - Si fallan, se mantiene abierto.


resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

info:
  app:
    name: "cart-service"
    description: "Cart Application"
    version: "1.0.0"

logging:
  level:
    com:
      rodrigovelazq:
        cart_service: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"